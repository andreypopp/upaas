#!/bin/bash
set -e
case "$1" in
  receive)
    APP="$2"; IMAGE="upaas/$APP"
    echo "-----> Building $APP ..."
    cat | upaas build $IMAGE
    echo "-----> Build complete!"
    echo "-----> Releasing $APP ..."
    upaas release $APP $IMAGE
    echo "-----> Release complete!"
    echo "-----> Deploying $APP ..."
    upaas deploy $APP $IMAGE
    echo "-----> Deploy complete!"
    echo "-----> Cleaning up ..."
    upaas cleanup
    echo "-----> Cleanup complete!"
    echo "=====> Application deployed:" `cat $HOME/$APP/ADDRESS`
    ;;

  build)
    IMAGE="$2"
    tmpdir=$(mktemp -d)
    $(cat > $tmpdir/app.tar)
    (cd $tmpdir; tar xf app.tar)
    stack=$(cat $tmpdir/.stack)
    id=$(cat $tmpdir/app.tar | docker run -i -a stdin upaas/stack/$stack /bin/bash -c "mkdir -p /app && tar -xC /app")
    test $(docker wait $id) -eq 0
    docker commit $id $IMAGE > /dev/null
    id=$(docker run -d $IMAGE /bin/bash -c "cd /app && make build")
    docker attach $id
    test $(docker wait $id) -eq 0
    docker commit $id $IMAGE > /dev/null
    rm -rf $tmpdir
    ;;

  release)
    APP="$2"; IMAGE="$3"
    if [[ -f "$HOME/$APP/ENV" ]]; then
      id=$(cat "$HOME/$APP/ENV" | docker run -i -a stdin $IMAGE /bin/bash -c "mkdir -p /app/.profile.d && cat > /app/.profile.d/app-env.sh")
      test $(docker wait $id) -eq 0
      docker commit $id $IMAGE > /dev/null
    fi
    ;;

  deploy)
    APP="$2"; IMAGE="$3"
    if [[ ! -f "$HOME/$APP/PORT" ]]; then
      # First deploy
      id=$(docker run -d -p 5000 -e PORT=5000 $IMAGE /bin/bash -c "cd /app && shoreman")
      echo $id > "$HOME/$APP/CONTAINER"
      port=$(docker port $id 5000)
      echo $port > "$HOME/$APP/PORT"
      echo "$(< "$HOME/HOSTNAME"):$port" > "$HOME/$APP/ADDRESS"
    else
      # Regular deploy
      oldid=$(< "$HOME/$APP/CONTAINER")
      docker kill $oldid > /dev/null
      port=$(< "$HOME/$APP/PORT")
      id=$(docker run -d -p ":$port" -e "PORT=$port" $IMAGE /bin/bash -c "/start web")
      echo $id > "$HOME/$APP/CONTAINER"
    fi
    ;;

  cleanup)
    # delete all non-running container
    docker ps -a | grep 'Exit' |  awk '{print $1}' | xargs docker rm &> /dev/null &
    # delete unused images
    docker images | grep '<none>' |  awk '{print $3}'  | xargs docker rmi &> /dev/null &
    ;;

  # temporary hack for https://github.com/progrium/upaas/issues/82
  deploy:all)
    for app in $(ls -d $HOME/*/); do
      APP=$(basename $app);
      IMAGE="app/$APP"
      upaas deploy $APP $IMAGE
    done
    ;;
esac
